<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
        SYSTEM "https://resources.jetbrains.com/writerside/1.0/xhtml-entities.dtd">
<topic xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/writerside/1.0/topic.v2.xsd"
       title="Ahora tendremos un clúster" id="Now-we-ll-have-a-Cluster">

    <p>
        Hasta ahora, hemos estado trabajando con un solo nodo. En este tutorial, crearemos
        un clúster de nodos. Utilizar un solo nodo puede ser útil con fines de prueba y desarrollo,
        pero queremos comprender cómo estas herramientas pueden ser utilizadas en un entorno de producción.
    </p>

    <chapter title="Arquitectura Observador-Observado" id="architecure">
        <p>
            Tendremos dos tipos de hosts:
        </p>

        <list>
            <li>1 Observador</li>
            <li>X Observados</li>
        </list>

        <p>
            Esta arquitectura nos permitirá observar varios hosts desde una sola instancia de Grafana.
            Además, no querríamos instalar Grafana, Loki y Prometheus en cada host que queremos observar.
            Instalar estas herramientas en cada host sería un desperdicio de recursos y agregaría mucha
            carga y complejidad a nuestra infraestructura.
        </p>

        <img src="Cluster.png" alt="Arquitectura del clúster"/>
    </chapter>

    <chapter title="En el host Observador" id="observer-setup">

        <p>
            El host observador será el que albergará Grafana, Loki y Prometheus.
        </p>

        <p>
            Prometheus es un scraper, lo que significa que será responsable de recopilar métricas de
            los observados. Por lo tanto, necesitamos configurarlo para que sepa dónde encontrar a los observados.
        </p>
        <procedure>
            <step>
                <p>
                    Abre el archivo <code>lab-grafana/resources/prometheus.yml</code> en tu editor favorito.
                </p>
                <tip>
                    Si estás usando la terminal, puedes usar el editor <code>nano</code> en lugar de <code>vim</code>.
                </tip>
            </step>
            <step>
                <p>
                    Editaremos la sección <code>scrape_configs</code> del archivo:
                </p>
                <code-block lang="yaml">
                    - job_name: "node_exporter"
                    static_configs:
                    - targets: ["node-exporter:9100"]

                    - job_name: "cadvisor"
                    static_configs:
                    - targets: ["cadvisor:8080"]
                </code-block>
            </step>
            <step>
                <p>
                    Como cada uno de nuestros observados ejecutará un <code>node-exporter</code> y un <code>cadvisor</code>,
                    necesitaremos agregarlos a la lista de destinos:
                </p>
                <code-block lang="yaml">
                    - job_name: "node_exporter"
                    static_configs:
                    - targets: ["node-exporter:9100", "observado1:9100", "observado2:9100", "observadoX:9100"]

                    - job_name: "cadvisor"
                    static_configs:
                    - targets: ["cadvisor:8080", "observado1:8080", "observado2:8080", "observadoX:8080"]
                </code-block>
                <p>
                    Reemplaza <code>observado1</code>, <code>observado2</code> y <code>observadoX</code> con las
                    direcciones IP de tus observados.
                </p>
            </step>
            <step>
                <p>
                    Guarda el archivo y sal de tu editor.
                </p>
            </step>
            <step>
                <p>
                    Reinicia el contenedor de Prometheus:
                </p>
                <code-block lang="bash">
                    docker restart prometheus
                </code-block>
            </step>
            <step>
                <p>
                    Abre la interfaz web de Prometheus en <code>http://localhost:9090</code>.
                </p>
                <p>
                    Deberías ver los targets de <code>node_exporter</code> y <code>cadvisor</code>
                    en la página de <code>Targets</code>.
                    Si no los ves, espera unos segundos y actualiza la página, el scraping
                    puede tardar unos segundos.
                </p>
            </step>
        </procedure>
    </chapter>

    <chapter title="En los hosts Observados" id="observee-setup">
        <p>
            Los hosts observados serán los que serán monitoreados por el observador.
            Ejecutarán los servicios <code>node-exporter</code>, <code>cadvisor</code>
            y <code>promtail</code>.
        </p>

        <p>
            Necesitaremos configurar <code>promtail</code> para enviar registros al observador,
            ya que <code>promtail</code> es el agente que se encargará de enviar registros
            a Loki.
        </p>
        <procedure>
            <step>
                <p>
                    Abre el archivo <code>lab-grafana/resources/promtail.yml</code> en tu editor favorito.
                </p>
                <tip>
                    Si estás usando la terminal, puedes usar el editor <code>nano</code> en lugar de <code>vim</code>.
                </tip>
            </step>
            <step>
                <p>
                    Editaremos la sección <code>clients</code> del archivo:
                </p>
                <code-block lang="yaml">
                    clients:
                    - url: http://localhost:3100/loki/api/v1/push
                </code-block>
            </step>
            <step>
                <p>
                    Reemplaza <code>localhost</code> con la dirección IP de tu observador.
                </p>
            </step>
            <step>
                <p>
                    Guarda el archivo y sal de tu editor.
                </p>
            </step>
            <step>
                <p>
                    Reinicia el contenedor de <code>promtail</code>:
                </p>
                <code-block lang="bash">
                    docker restart promtail
                </code-block>
            </step>
            <step>
                <p>
                    Como observado, ya no necesitaremos los servicios de Grafana, Loki, Prometheus y Blackbox.
                    Los detendremos:
                </p>
                <code-block lang="bash">
                    docker stop grafana loki prometheus blackbox
                </code-block>
            </step>
            <step>
                <p>
                    Ahora estaríamos listos para desplegar nuestra aplicación en los hosts observados.
                </p>
            </step>
        </procedure>
    </chapter>

    <chapter title="Lo que has aprendido" id="what-learned">
        <p>
            Llegados a este punto, deberías entender cómo un clúster de nodos puede ser observado por una sola
            instancia de Grafana. Esta es la arquitectura que se utiliza comúnmente en entornos de producción.
        </p>
    </chapter>

    <seealso>
        <category ref="external">

        </category>
    </seealso>
</topic>
